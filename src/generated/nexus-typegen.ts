/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../context"
import { core, connectionPluginCore } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Address: { // root type
    city?: string | null; // String
    countryCode?: string | null; // String
    county?: NexusGenRootTypes['County'] | null; // County
    countyCode?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    lat?: number | null; // Float
    lineOne?: string | null; // String
    lineTwo?: string | null; // String
    lng?: number | null; // Float
    place?: NexusGenRootTypes['Place'] | null; // Place
    state?: NexusGenRootTypes['State'] | null; // State
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    zip?: string | null; // String
  }
  Agent: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnit?: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: NexusGenRootTypes['User'] | null; // User
  }
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Company: { // root type
    bio?: string | null; // String
    contactPerson?: string | null; // String
    email?: string | null; // String
    id: number; // Int!
    name?: string | null; // String
    roleId?: number | null; // Int
    website?: string | null; // String
  }
  Country: { // root type
    fipsCode: string; // String!
    id: number; // Int!
    longCode?: string | null; // String
    name: string; // String!
    shortCode?: string | null; // String
  }
  County: { // root type
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
    state?: NexusGenRootTypes['State'] | null; // State
  }
  LeasableUnit: { // root type
    address?: NexusGenRootTypes['Address'] | null; // Address
    agents?: Array<NexusGenRootTypes['Agent'] | null> | null; // [Agent]
    baseRent?: number | null; // Float
    businessKey?: string | null; // String
    ceilingHeightInches?: number | null; // Int
    dateAvailable?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    externalNotes?: string | null; // String
    hasDockDoor?: boolean | null; // Boolean
    hasDriveThru?: boolean | null; // Boolean
    hasGreaseTrap?: boolean | null; // Boolean
    id: number; // Int!
    isInPortfolio?: boolean | null; // Boolean
    isListed: boolean; // Boolean!
    leasableUnitSubType?: NexusGenRootTypes['LeasableUnitSubType'] | null; // LeasableUnitSubType
    monthlyCost?: number | null; // Float
    name?: string | null; // String
    nnnRent?: number | null; // Float
    occupancyStatus?: number | null; // Int
    organization?: NexusGenRootTypes['Organization'] | null; // Organization
    productType?: NexusGenRootTypes['ProductType'] | null; // ProductType
    renderUrl?: string | null; // String
    squareFeet?: number | null; // Int
    squareFeetIsEstimate?: boolean | null; // Boolean
    squareFootCost?: number | null; // Float
    totalRent?: number | null; // Float
  }
  LeasableUnitConnection: { // root type
    edges?: Array<NexusGenRootTypes['LeasableUnitEdge'] | null> | null; // [LeasableUnitEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  LeasableUnitEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
  }
  LeasableUnitSubType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnitType?: NexusGenRootTypes['LeasableUnitType'] | null; // LeasableUnitType
    leasableUnits?: NexusGenRootTypes['LeasableUnit'][] | null; // [LeasableUnit!]
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  LeasableUnitType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnitSubTypes?: NexusGenRootTypes['LeasableUnitSubType'][] | null; // [LeasableUnitSubType!]
    leasableUnits?: NexusGenRootTypes['LeasableUnit'][] | null; // [LeasableUnit!]
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Organization: { // root type
    address?: NexusGenRootTypes['Address'] | null; // Address
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    dAndBNumber?: string | null; // String
    demographicRequirement?: number | null; // Int
    fein?: string | null; // String
    generalRequirements?: string | null; // String
    id: number; // Int!
    industryCategory?: string | null; // String
    isActive?: boolean | null; // Boolean
    isBrokerage?: boolean | null; // Boolean
    leasableUnit?: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
    leaseRequirement?: number | null; // Int
    mainPhone?: string | null; // String
    name?: string | null; // String
    notes?: string | null; // String
    registeredAgent?: string | null; // String
    siteRequirement?: number | null; // Int
    stateAffiliation?: string | null; // String
    stateBusinessEntityNumber?: string | null; // String
    stockTicker?: string | null; // String
    unitRequirement?: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    website?: string | null; // String
  }
  OrganizationConnection: { // root type
    edges?: Array<NexusGenRootTypes['OrganizationEdge'] | null> | null; // [OrganizationEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  OrganizationEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Organization'] | null; // Organization
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Place: { // root type
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
  }
  ProductType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    properties?: Array<NexusGenRootTypes['Property'] | null> | null; // [Property]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Property: { // root type
    businessKey: string; // String!
    name: string; // String!
    productType: number; // Int!
  }
  PropertyCategoryType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    productType?: NexusGenRootTypes['ProductType'] | null; // ProductType
    properties?: NexusGenRootTypes['Property'][] | null; // [Property!]
    propertySubCategoryTypes?: NexusGenRootTypes['PropertySubCategoryType'][] | null; // [PropertySubCategoryType!]
    siteRequirements?: NexusGenRootTypes['SiteRequirement'][] | null; // [SiteRequirement!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PropertySubCategoryType: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    properties?: NexusGenRootTypes['Property'][] | null; // [Property!]
    propertyCategoryType?: NexusGenRootTypes['PropertyCategoryType'] | null; // PropertyCategoryType
    siteRequirements?: NexusGenRootTypes['SiteRequirement'][] | null; // [SiteRequirement!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: {};
  Role: { // root type
    id: number; // Int!
    name?: string | null; // String
  }
  SiteRequirement: { // root type
    accessRequirements?: string | null; // String
    id: number; // Int!
    landAverageAcres?: number | null; // Float
    landMaxAcres?: number | null; // Float
    landMinAcres?: number | null; // Float
    organizations?: NexusGenRootTypes['Organization'][] | null; // [Organization!]
    parkingStallsCount?: number | null; // Int
    parkingStallsPerSqFt?: number | null; // Float
    productType?: NexusGenRootTypes['ProductType'] | null; // ProductType
    propertyCategoryType?: NexusGenRootTypes['PropertyCategoryType'] | null; // PropertyCategoryType
    propertySubCategoryType?: NexusGenRootTypes['PropertySubCategoryType'] | null; // PropertySubCategoryType
    trafficRequirements?: number | null; // Int
  }
  Skill: { // root type
    id: number; // Int!
    name?: string | null; // String
  }
  State: { // root type
    counties?: NexusGenRootTypes['County'][] | null; // [County!]
    country?: NexusGenRootTypes['Country'] | null; // Country
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
    places?: NexusGenRootTypes['Place'][] | null; // [Place!]
  }
  User: { // root type
    acceptedDisclaimerAt?: NexusGenScalars['DateTime'] | null; // DateTime
    accountType?: number | null; // Int
    alternateCellPhone?: string | null; // String
    alternateEmail?: string | null; // String
    currentSignInAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    firstName?: string | null; // String
    id: number; // Int!
    isBroker?: boolean | null; // Boolean
    lastName?: string | null; // String
    officePhone?: string | null; // String
    organization?: number | null; // Int
    personType?: number | null; // Int
    picture?: string | null; // String
    primaryCellPhone?: string | null; // String
    signInCount?: number | null; // Int
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Address: { // field return type
    city: string | null; // String
    country: NexusGenRootTypes['Country'] | null; // Country
    countryCode: string | null; // String
    county: NexusGenRootTypes['County'] | null; // County
    countyCode: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    lat: number | null; // Float
    lineOne: string | null; // String
    lineTwo: string | null; // String
    lng: number | null; // Float
    place: NexusGenRootTypes['Place'] | null; // Place
    state: NexusGenRootTypes['State'] | null; // State
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    zip: string | null; // String
  }
  Agent: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnit: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
  }
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Company: { // field return type
    bio: string | null; // String
    contactPerson: string | null; // String
    email: string | null; // String
    id: number; // Int!
    name: string | null; // String
    roleId: number | null; // Int
    roles: NexusGenRootTypes['Role'][]; // [Role!]!
    website: string | null; // String
  }
  Country: { // field return type
    fipsCode: string; // String!
    id: number; // Int!
    longCode: string | null; // String
    name: string; // String!
    shortCode: string | null; // String
    states: NexusGenRootTypes['State'][] | null; // [State!]
  }
  County: { // field return type
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
    state: NexusGenRootTypes['State'] | null; // State
  }
  LeasableUnit: { // field return type
    address: NexusGenRootTypes['Address'] | null; // Address
    agents: Array<NexusGenRootTypes['Agent'] | null> | null; // [Agent]
    baseRent: number | null; // Float
    businessKey: string | null; // String
    ceilingHeightInches: number | null; // Int
    dateAvailable: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    externalNotes: string | null; // String
    flyer: string | null; // String
    hasDockDoor: boolean | null; // Boolean
    hasDriveThru: boolean | null; // Boolean
    hasGreaseTrap: boolean | null; // Boolean
    id: number; // Int!
    image: string | null; // String
    isInPortfolio: boolean | null; // Boolean
    isListed: boolean; // Boolean!
    leasableUnitSubType: NexusGenRootTypes['LeasableUnitSubType'] | null; // LeasableUnitSubType
    monthlyCost: number | null; // Float
    name: string | null; // String
    nnnRent: number | null; // Float
    occupancyStatus: number | null; // Int
    organization: NexusGenRootTypes['Organization'] | null; // Organization
    plan: string | null; // String
    productType: NexusGenRootTypes['ProductType'] | null; // ProductType
    renderUrl: string | null; // String
    squareFeet: number | null; // Int
    squareFeetIsEstimate: boolean | null; // Boolean
    squareFootCost: number | null; // Float
    totalRent: number | null; // Float
  }
  LeasableUnitConnection: { // field return type
    edges: Array<NexusGenRootTypes['LeasableUnitEdge'] | null> | null; // [LeasableUnitEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  LeasableUnitEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
  }
  LeasableUnitSubType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnitType: NexusGenRootTypes['LeasableUnitType'] | null; // LeasableUnitType
    leasableUnits: NexusGenRootTypes['LeasableUnit'][] | null; // [LeasableUnit!]
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  LeasableUnitType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    leasableUnitSubTypes: NexusGenRootTypes['LeasableUnitSubType'][] | null; // [LeasableUnitSubType!]
    leasableUnits: NexusGenRootTypes['LeasableUnit'][] | null; // [LeasableUnit!]
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    agreeDisclaimer: NexusGenRootTypes['User'] | null; // User
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    signup: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
  }
  Organization: { // field return type
    address: NexusGenRootTypes['Address'] | null; // Address
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    dAndBNumber: string | null; // String
    demographicRequirement: number | null; // Int
    fein: string | null; // String
    generalRequirements: string | null; // String
    id: number; // Int!
    industryCategory: string | null; // String
    isActive: boolean | null; // Boolean
    isBrokerage: boolean | null; // Boolean
    leasableUnit: NexusGenRootTypes['LeasableUnit'] | null; // LeasableUnit
    leaseRequirement: number | null; // Int
    logo: string | null; // String
    mainPhone: string | null; // String
    name: string | null; // String
    notes: string | null; // String
    registeredAgent: string | null; // String
    siteRequirement: number | null; // Int
    stateAffiliation: string | null; // String
    stateBusinessEntityNumber: string | null; // String
    stockTicker: string | null; // String
    unitRequirement: number | null; // Int
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    website: string | null; // String
  }
  OrganizationConnection: { // field return type
    edges: Array<NexusGenRootTypes['OrganizationEdge'] | null> | null; // [OrganizationEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  OrganizationEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Organization'] | null; // Organization
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Place: { // field return type
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
    state: NexusGenRootTypes['State'] | null; // State
  }
  ProductType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    properties: Array<NexusGenRootTypes['Property'] | null> | null; // [Property]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Property: { // field return type
    businessKey: string; // String!
    name: string; // String!
    productType: number; // Int!
  }
  PropertyCategoryType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    productType: NexusGenRootTypes['ProductType'] | null; // ProductType
    properties: NexusGenRootTypes['Property'][] | null; // [Property!]
    propertySubCategoryTypes: NexusGenRootTypes['PropertySubCategoryType'][] | null; // [PropertySubCategoryType!]
    siteRequirements: NexusGenRootTypes['SiteRequirement'][] | null; // [SiteRequirement!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  PropertySubCategoryType: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    name: string; // String!
    properties: NexusGenRootTypes['Property'][] | null; // [Property!]
    propertyCategoryType: NexusGenRootTypes['PropertyCategoryType'] | null; // PropertyCategoryType
    siteRequirements: NexusGenRootTypes['SiteRequirement'][] | null; // [SiteRequirement!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: { // field return type
    addresses: Array<NexusGenRootTypes['Address'] | null> | null; // [Address]
    leasableUnits: Array<NexusGenRootTypes['LeasableUnit'] | null> | null; // [LeasableUnit]
    leasableUnitsConnection: NexusGenRootTypes['LeasableUnitConnection'] | null; // LeasableUnitConnection
    me: NexusGenRootTypes['User'] | null; // User
    organizations: NexusGenRootTypes['OrganizationConnection'] | null; // OrganizationConnection
  }
  Role: { // field return type
    company: NexusGenRootTypes['Company'] | null; // Company
    id: number; // Int!
    name: string | null; // String
    skills: Array<NexusGenRootTypes['Skill'] | null> | null; // [Skill]
  }
  SiteRequirement: { // field return type
    accessRequirements: string | null; // String
    id: number; // Int!
    landAverageAcres: number | null; // Float
    landMaxAcres: number | null; // Float
    landMinAcres: number | null; // Float
    organizations: NexusGenRootTypes['Organization'][] | null; // [Organization!]
    parkingStallsCount: number | null; // Int
    parkingStallsPerSqFt: number | null; // Float
    productType: NexusGenRootTypes['ProductType'] | null; // ProductType
    propertyCategoryType: NexusGenRootTypes['PropertyCategoryType'] | null; // PropertyCategoryType
    propertySubCategoryType: NexusGenRootTypes['PropertySubCategoryType'] | null; // PropertySubCategoryType
    trafficRequirements: number | null; // Int
  }
  Skill: { // field return type
    id: number; // Int!
    name: string | null; // String
    role: NexusGenRootTypes['Role'] | null; // Role
  }
  State: { // field return type
    counties: NexusGenRootTypes['County'][] | null; // [County!]
    country: NexusGenRootTypes['Country'] | null; // Country
    fipsCode: number; // Int!
    id: number; // Int!
    name: string; // String!
    places: NexusGenRootTypes['Place'][] | null; // [Place!]
  }
  User: { // field return type
    acceptedDisclaimerAt: NexusGenScalars['DateTime'] | null; // DateTime
    accountType: number | null; // Int
    alternateCellPhone: string | null; // String
    alternateEmail: string | null; // String
    currentSignInAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    firstName: string | null; // String
    id: number; // Int!
    isBroker: boolean | null; // Boolean
    lastName: string | null; // String
    officePhone: string | null; // String
    organization: number | null; // Int
    personType: number | null; // Int
    picture: string | null; // String
    primaryCellPhone: string | null; // String
    signInCount: number | null; // Int
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    city: 'String'
    country: 'Country'
    countryCode: 'String'
    county: 'County'
    countyCode: 'String'
    createdAt: 'DateTime'
    lat: 'Float'
    lineOne: 'String'
    lineTwo: 'String'
    lng: 'Float'
    place: 'Place'
    state: 'State'
    updatedAt: 'DateTime'
    zip: 'String'
  }
  Agent: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    leasableUnit: 'LeasableUnit'
    updatedAt: 'DateTime'
    user: 'User'
  }
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Company: { // field return type name
    bio: 'String'
    contactPerson: 'String'
    email: 'String'
    id: 'Int'
    name: 'String'
    roleId: 'Int'
    roles: 'Role'
    website: 'String'
  }
  Country: { // field return type name
    fipsCode: 'String'
    id: 'Int'
    longCode: 'String'
    name: 'String'
    shortCode: 'String'
    states: 'State'
  }
  County: { // field return type name
    fipsCode: 'Int'
    id: 'Int'
    name: 'String'
    state: 'State'
  }
  LeasableUnit: { // field return type name
    address: 'Address'
    agents: 'Agent'
    baseRent: 'Float'
    businessKey: 'String'
    ceilingHeightInches: 'Int'
    dateAvailable: 'DateTime'
    description: 'String'
    externalNotes: 'String'
    flyer: 'String'
    hasDockDoor: 'Boolean'
    hasDriveThru: 'Boolean'
    hasGreaseTrap: 'Boolean'
    id: 'Int'
    image: 'String'
    isInPortfolio: 'Boolean'
    isListed: 'Boolean'
    leasableUnitSubType: 'LeasableUnitSubType'
    monthlyCost: 'Float'
    name: 'String'
    nnnRent: 'Float'
    occupancyStatus: 'Int'
    organization: 'Organization'
    plan: 'String'
    productType: 'ProductType'
    renderUrl: 'String'
    squareFeet: 'Int'
    squareFeetIsEstimate: 'Boolean'
    squareFootCost: 'Float'
    totalRent: 'Float'
  }
  LeasableUnitConnection: { // field return type name
    edges: 'LeasableUnitEdge'
    pageInfo: 'PageInfo'
  }
  LeasableUnitEdge: { // field return type name
    cursor: 'String'
    node: 'LeasableUnit'
  }
  LeasableUnitSubType: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    leasableUnitType: 'LeasableUnitType'
    leasableUnits: 'LeasableUnit'
    name: 'String'
    updatedAt: 'DateTime'
  }
  LeasableUnitType: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    leasableUnitSubTypes: 'LeasableUnitSubType'
    leasableUnits: 'LeasableUnit'
    name: 'String'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    agreeDisclaimer: 'User'
    login: 'AuthPayload'
    signup: 'AuthPayload'
  }
  Organization: { // field return type name
    address: 'Address'
    createdAt: 'DateTime'
    dAndBNumber: 'String'
    demographicRequirement: 'Int'
    fein: 'String'
    generalRequirements: 'String'
    id: 'Int'
    industryCategory: 'String'
    isActive: 'Boolean'
    isBrokerage: 'Boolean'
    leasableUnit: 'LeasableUnit'
    leaseRequirement: 'Int'
    logo: 'String'
    mainPhone: 'String'
    name: 'String'
    notes: 'String'
    registeredAgent: 'String'
    siteRequirement: 'Int'
    stateAffiliation: 'String'
    stateBusinessEntityNumber: 'String'
    stockTicker: 'String'
    unitRequirement: 'Int'
    updatedAt: 'DateTime'
    website: 'String'
  }
  OrganizationConnection: { // field return type name
    edges: 'OrganizationEdge'
    pageInfo: 'PageInfo'
  }
  OrganizationEdge: { // field return type name
    cursor: 'String'
    node: 'Organization'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Place: { // field return type name
    fipsCode: 'Int'
    id: 'Int'
    name: 'String'
    state: 'State'
  }
  ProductType: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    properties: 'Property'
    updatedAt: 'DateTime'
  }
  Property: { // field return type name
    businessKey: 'String'
    name: 'String'
    productType: 'Int'
  }
  PropertyCategoryType: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    productType: 'ProductType'
    properties: 'Property'
    propertySubCategoryTypes: 'PropertySubCategoryType'
    siteRequirements: 'SiteRequirement'
    updatedAt: 'DateTime'
  }
  PropertySubCategoryType: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    name: 'String'
    properties: 'Property'
    propertyCategoryType: 'PropertyCategoryType'
    siteRequirements: 'SiteRequirement'
    updatedAt: 'DateTime'
  }
  Query: { // field return type name
    addresses: 'Address'
    leasableUnits: 'LeasableUnit'
    leasableUnitsConnection: 'LeasableUnitConnection'
    me: 'User'
    organizations: 'OrganizationConnection'
  }
  Role: { // field return type name
    company: 'Company'
    id: 'Int'
    name: 'String'
    skills: 'Skill'
  }
  SiteRequirement: { // field return type name
    accessRequirements: 'String'
    id: 'Int'
    landAverageAcres: 'Float'
    landMaxAcres: 'Float'
    landMinAcres: 'Float'
    organizations: 'Organization'
    parkingStallsCount: 'Int'
    parkingStallsPerSqFt: 'Float'
    productType: 'ProductType'
    propertyCategoryType: 'PropertyCategoryType'
    propertySubCategoryType: 'PropertySubCategoryType'
    trafficRequirements: 'Int'
  }
  Skill: { // field return type name
    id: 'Int'
    name: 'String'
    role: 'Role'
  }
  State: { // field return type name
    counties: 'County'
    country: 'Country'
    fipsCode: 'Int'
    id: 'Int'
    name: 'String'
    places: 'Place'
  }
  User: { // field return type name
    acceptedDisclaimerAt: 'DateTime'
    accountType: 'Int'
    alternateCellPhone: 'String'
    alternateEmail: 'String'
    currentSignInAt: 'DateTime'
    email: 'String'
    firstName: 'String'
    id: 'Int'
    isBroker: 'Boolean'
    lastName: 'String'
    officePhone: 'String'
    organization: 'Int'
    personType: 'Int'
    picture: 'String'
    primaryCellPhone: 'String'
    signInCount: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    agreeDisclaimer: { // args
      acceptedDisclaimerAt?: NexusGenScalars['DateTime'] | null; // DateTime
    }
    login: { // args
      email: string; // String!
      password?: string | null; // String
    }
    signup: { // args
      email: string; // String!
      name?: string | null; // String
      password?: string | null; // String
    }
  }
  Query: {
    leasableUnitsConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    organizations: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}